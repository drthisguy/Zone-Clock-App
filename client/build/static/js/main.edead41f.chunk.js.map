{"version":3,"sources":["assets/img/sapling.png","assets/img/hour-hand.png","assets/img/minute-hand.png","assets/img/second-hand.png","assets/img/DialA.png","assets/img/Sapling-RoundMount.png","assets/img/Sapling-Round-Still-Zone-Clock-Brushed-Aluminum.png","assets/img/hour-hand-ds.png","assets/img/minute-hand_ds.png","assets/img/second-hand_ds.png","assets/img/clock-ABS.png","components/Grid/index.js","components/Navbar/index.js","utils/Helpers.js","components/ZoneClocks/index.js","components/ClockMount/index.js","components/Search/index.js","components/ListGroup/index.js","components/FourDigitClock/index.js","components/HistoryList/index.js","components/DigitalClock/index.js","components/AnalogClock/index.js","components/DaylightSavings/index.js","utils/API.js","components/WorldMap/index.js","pages/Main/Main.js","utils/CustomHooks.js","pages/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","classes","children","className","Row","Col","size","split","map","join","Collapse","navState","id","Button","props","NavBar","useState","navLinks","showNavLinks","pathname","useLocation","style","backgroundImage","to","onClick","type","data-toggle","data-target","alt","src","require","logo","float","height","getLocalTime","offset","userTime","Date","msOffset","utc","getTime","getTimezoneOffset","localTime","localHours","getHours","localMinutes","getMinutes","localSeconds","getSeconds","FormatZone","zone","dst","gmtOffset","zoneStart","zoneEnd","rawOffset","preOff","Math","floor","bias","abs","dstStart","dstEnd","a","getYear","zoneName","countryCode","countryName","northAmerica","europe","eastEurope","ZoneClocks","position","hands","setHands","useEffect","timer","setInterval","localClock","clearInterval","hourHand","minuteHand","secondHand","mount","analog","left","top","hrHand","transform","minHand","secHand","width","textAlign","display","flexDirection","alignItems","minWidth","minHeight","listStyle","backgroundSize","backgroundRepeat","backgroundPosition","hour","transformOrigin","zIndex","min","sec","window","innerWidth","ClockMount","sydneyOffset","getMonth","nyOffset","londonOffset","stillClocks","background","wideSydney","smallSydney","wideNY","smallNY","wideLond","smallLond","wideDub","smallDub","wideTok","smallTok","marginTop","SearchField","ListGroup","data","itemStyle","justifyContent","padding","paddingLeft","marginBottom","FourDigitClock","timeString","setTimeString","timeOfDay","localTimeString","HistoryList","loadCity","clearList","confirmed","isConfirmed","city","i","key","bind","name","length","clrBtn","confirmListReset","border","borderBottom","fontSize","backGroundColor","borderColor","color","fontWeight","DigitalClock","AnalogClock","finalMount","finalAnalog","DaylightSavings","message","group","code","includes","getCountryGroup","startMods","highlighted","endMods","class","birthdayStyle","month","getFullYear","months","beginMonths","modifiers","toDateString","date","stringTime","endMonths","marginLeft","toLocaleTimeString","predictCities","token","fetch","response","json","googleThis","getMapSrcUrl","process","WorldMap","coords","loadMap","url","API","initMap","loadScript","google","maps","Map","document","getElementById","zoom","center","disableDefaultUI","styles","mapStyle","Marker","index","getElementsByTagName","script","createElement","async","defer","parentNode","insertBefore","Main","uuid","setCity","lat","lng","coordinates","setCoordinates","longName","shortName","names","setNames","predictions","setPredictions","history","setHistory","initialMount","useRef","setZone","isLoading","setIsLoading","hasError","setError","errorMessage","setErrorMessage","updateUrl","fetchZone","result","status","saplingZone","console","log","useFetch","JSON","parse","localStorage","getItem","err","setItem","stringify","current","updateLocalStorage","onInputChange","e","target","value","suggestions","x","description","some","shift","getCoordinates","results","place","formatted_address","replace","address_components","long_name","geometry","location","zoneURL","selectPredictions","str","normalizeString","text","normalize","onSubmit","preventDefault","reset","eyeGlass","placeholder","autocomplete","textIndent","borderRadius","onChange","listStyleType","suggestion","renderPredictions","historyStyle","Object","zoneUrl","cb","clear","margin","About","App","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.edead41f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sapling.49966c7a.png\";","module.exports = __webpack_public_path__ + \"static/media/hour-hand.3655b242.png\";","module.exports = __webpack_public_path__ + \"static/media/minute-hand.ff935a33.png\";","module.exports = __webpack_public_path__ + \"static/media/second-hand.d69756b3.png\";","module.exports = __webpack_public_path__ + \"static/media/DialA.030801bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Sapling-RoundMount.05ddd4cc.png\";","module.exports = __webpack_public_path__ + \"static/media/Sapling-Round-Still-Zone-Clock-Brushed-Aluminum.a2545f4c.png\";","module.exports = __webpack_public_path__ + \"static/media/hour-hand-ds.8d2ce081.png\";","module.exports = __webpack_public_path__ + \"static/media/minute-hand_ds.bcb53df0.png\";","module.exports = __webpack_public_path__ + \"static/media/second-hand_ds.18df2784.png\";","module.exports = __webpack_public_path__ + \"static/media/clock-ABS.531da561.png\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n    }\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}\n\nexport const Wrapper = ({ children }) => <Container > <Row >{children}</Row></Container>\n\nexport const Button = props => <button {...props} >{props.children}</button>","import React, { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Collapse } from '../Grid'\n\nexport default function NavBar() {\n\n    let [navLinks, showNavLinks] = useState(false)\n    const { pathname } = useLocation(),\n\n     toggleNav = () => showNavLinks(navLinks = !navLinks)\n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}\n        style={{backgroundImage: 'linear-gradient(to right, white , #fcaf17)'}}\n        >\n            <Link to='/' className={'navbar-brand'}>Sapling Zone Clocks</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n                \n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/about\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/about\" className={'nav-link'}>\n                        About This\n                    </Link>    \n                </li>\n              </ul>\n                    <img alt='logo' src={require(\"../../assets/img/sapling.png\")} style={logo} />\n            </Collapse>\n        </nav>\n    )\n}\n\nconst logo = {\n    float: 'right', \n    height:'65pt'\n}","//returns local time to the many clocks this app uses.\nexport const getLocalTime = offset => {\n\n    const userTime = new Date(),\n\n    //convert user time to local time.\n        msOffset = offset * 3600,  // -> milliseconds\n        utc = userTime.getTime() + (userTime.getTimezoneOffset() * 60000),\n        localTime = new Date(utc + 1000 * msOffset);\n\n    let localHours = localTime.getHours(),\n        localMinutes = localTime.getMinutes(),\n        localSeconds = localTime.getSeconds();\n\n    return { localHours, localMinutes, localSeconds }\n}\n\n//format timezoneDB data for Sapling clock programming.\nexport const FormatZone = zone => {\n\n    let { dst, gmtOffset, zoneStart, zoneEnd } = zone;\n\n    //get real offset in hours\n     dst = dst == 1 ? 'ON' : 'OFF';\n    const rawOffset = gmtOffset/3600,\n     preOff = dst === 'ON' ? rawOffset - 1 : rawOffset;\n    let offset = Math.floor(preOff);\n     offset = offset > 0 ? '+'+ offset : offset;\n\n    //workout the bias offset in seconds\n    let bias = Math.abs(preOff);\n     bias = (bias - Math.floor(bias))*3600;\n     bias = bias !==0 ? '+'+ bias : bias;\n    \n    //reformat unix dst dates\n    let dstStart = new Date(zoneStart*1000);\n    let dstEnd = new Date(zoneEnd*1000);\n\n    //convert dst times from EST to its local time.\n     dstStart = dstStart.getTime() + (dstStart.getTimezoneOffset()*60000);\n     dstStart = new Date(dstStart + 3600000*rawOffset);\n     dstEnd = dstEnd.getTime() + (dstEnd.getTimezoneOffset()*60000);\n     dstEnd = new Date(dstEnd + 3600000*rawOffset);\n\n    //Some of the DST data from the resource is inaccurate. This check validates DST dates in the southern hemisphere. \n    if(new Date() > dstStart && new Date() < dstEnd && dst === 'OFF') {\n        const a = dstStart;\n        dstStart = dstEnd;\n        dstEnd = a;\n    }\n    //create a condition for no DST. \n     dstEnd = dstEnd.getYear() === 69 || dstEnd.getYear() === 70 ? 'none' : dstEnd;\n\n     //other data used\n     const { zoneName, countryCode, countryName } = zone;\n    \n    return { zoneName, offset, bias, dst, dstStart, dstEnd, rawOffset, countryName, countryCode };\n}\n\n\n\nconst northAmerica = ['US','BM','MX','CA','TC'],\n    europe = ['AL','AD','AT','BY','BE','BA','HR','CZ','DK','FR','DE','GI','HU','IT','XK','LI','LU','MK','MT','ME','NL','NO','PL','SM','RS','SK','SI','ES','SE','CH','VA'],\n    eastEurope = ['BG','CY','EE','FI','GR','LV','LT','MD','RO','TR','UA'];\n\nexport const getCountryGroup = code => {\n\n    if (northAmerica.includes(code)) {\n        code = 'NA'\n    }\n    if (europe.includes(code)) {\n        code = 'EU'\n    }\n    if (eastEurope.includes(code)) {\n        code = 'EE'\n    }\n\n    switch (code) {\n        case 'NA':\n            return 'North American Group';\n        case 'EU':\n            return 'European Group';\n        case 'EE':\n            return 'Eastern European Group';\n        case 'GB':\n            return 'United Kingdom';\n        case 'IE':\n            return 'Ireland';\n        case 'BR':\n            return 'Brazil';\n        case 'JO':\n            return 'Jordan';\n        case 'CL':\n            return 'Chile';\n        case 'LB':\n            return 'Lebanon';\n        case 'PY':\n            return 'Paraguay';\n        case 'PT':\n            return 'Portugal';\n        case 'SY':\n            return 'Syria';\n    \n        default:\n            return 'none';\n    }\n}\n\n/* Because DST start times don't actually exist, they get bumped up to the next hour as part of its Unix timestamp. \nTherefore, we'll make em into a string w/ the proper time, and use that in the UI.  */   \nexport const stringTime = date => {\n    let localHours = date.getHours() - 1, //get and correct the hour.\n     localMinutes = date.getMinutes(),\n     localSeconds = date.getSeconds();\n\n    localMinutes = (localMinutes < 10 ? '0':'')+ localMinutes;\n    localSeconds = (localSeconds < 10 ? '0':'')+ localSeconds;\n\n    const timeOfDay = localHours < 12 ? 'AM' : 'PM';\n    localHours = localHours == -1? localHours +24 : localHours;\n    localHours = localHours > 12 ? localHours - 12 : localHours;\n    localHours = localHours == 0 ? 12 : localHours;\n\n    const stringifyedTime = localHours + \":\" + localMinutes + \":\" + localSeconds + \" \" + timeOfDay;\n\n    return stringifyedTime;\n}","import React, { useState, useEffect } from 'react';\nimport { getLocalTime } from '../../utils/Helpers';\n\nexport function ZoneClocks({ offset, position }) {\n\n    const [ hands, setHands ] = useState({});\n\n    useEffect(() => {\n        const timer = setInterval(localClock, 1000)  \n            return () => clearInterval(timer)\n    }, [offset])\n\n    const { hourHand, minuteHand, secondHand } = hands,\n\n    localClock = () => {\n\n        let { localHours, localMinutes, localSeconds } = getLocalTime(offset),\n        \n        //Set the angle for each clock hand\n            hourHand = localHours * 30 + (localMinutes/2),  // 360/12 = 30 + 15degrees for 30min (example)\n            minuteHand = localMinutes * 6,  // 360/60 = 6\n            secondHand = localSeconds * 6; // 360/60 = 6\n\n         setHands({ hourHand, minuteHand, secondHand })\n    }\n\n    return (\n        <div style={mount} >\n            <ul style={{...analog, left: position.left, top: position.top }}>\n                <li>\n                    <img src={require('../../assets/img/hour-hand.png')} \n                    style={{...hrHand, transform: `rotate(${hourHand}deg)`}} \n                    />\n                </li>\n                <li>\n                    <img src={require('../../assets/img/minute-hand.png')} \n                    style={{...minHand, transform: `rotate(${minuteHand}deg)`}} \n                    />\n                </li> \n                <li>\n                    <img src={require('../../assets/img/second-hand.png')} \n                    style={{...secHand, transform: `rotate(${secondHand}deg)`}} \n                    />\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nconst mount = {\n    width: '230',  \n    height: '230',\n    textAlign: 'center',    \n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n},\nanalog = {\n    minWidth: '100%',\n    minHeight: '100%',\n    position: 'relative',\n    listStyle: 'none',\n    backgroundSize: '230',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundImage: `url(${require(\"../../assets/img/DialA.png\")}`\n},\nhour = {\n    width: '15px',\n    top: '48px',\n    left: '114px ',\n    position: 'absolute',\n    transformOrigin: '50% 69%', \n    zIndex:'0'\n},\nmin = {\n    width: '15px',\n    top: '43px',\n    left: '114px',\n    position: 'absolute',\n    transformOrigin: '50% 78%', \n    zIndex:'1'\n},\nsec = {\n    width: '15px',\n    top: '47px',\n    left: '114px',\n    position: 'absolute',\n    transformOrigin: '50% 63%',\n    zIndex:'2'\n},\nhrHand = window.innerWidth > 1200 ?  hour : {...hour, width: '12px'} ,\nminHand = window.innerWidth > 1200 ?  min : {...min, width: '12px'} ,\nsecHand = window.innerWidth > 1200 ?  sec : {...sec, width: '12px'}","import React from 'react';\nimport { ZoneClocks } from '../ZoneClocks';\n\nexport function ClockMount() { \n\n    /* zone clock offsets with an attempt to estimate Daylight Savings changes. \n    Doesn't seem worth the 5 API calls, when loading, for better accuracy.  */\n    const sydneyOffset = (new Date().getMonth() > 3 && new Date().getMonth() < 9) ? 10 : 11,\n     nyOffset = (new Date().getMonth() > 2 && new Date().getMonth() < 10) ? -4 : -5,\n     londonOffset = (new Date().getMonth() > 2 && new Date().getMonth() < 10) ? 1 : 0,\n     dubaiOffset = 4, \n     tokyoOffset = 9;\n\n     //Return still, clock image for smaller screen sizes.\n     if (window.innerWidth < 992) {\n         return <div style={stillClocks} />\n     }\n    return (\n        <div style={background}>\n            <ZoneClocks offset={sydneyOffset} position={window.innerWidth > 1200 ? wideSydney : smallSydney} />\n            <ZoneClocks offset={nyOffset} position={window.innerWidth > 1200 ? wideNY : smallNY} />\n            <ZoneClocks offset={londonOffset} position={window.innerWidth > 1200 ? wideLond : smallLond} />\n            <ZoneClocks offset={dubaiOffset} position={window.innerWidth > 1200 ? wideDub : smallDub} />\n            <ZoneClocks offset={tokyoOffset} position={window.innerWidth > 1200 ? wideTok : smallTok} />\n        </div>\n    )\n}\n\nconst background = {\n    backgroundImage: `url(${require(\"../../assets/img/Sapling-RoundMount.png\")}`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '80%',\n    height: '260px',\n    marginTop: '30px'\n},\nstillClocks = {\n    backgroundImage: `url(${require(\"../../assets/img/Sapling-Round-Still-Zone-Clock-Brushed-Aluminum.png\")}`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '80%',\n    height: '260px',\n    marginTop: '30px'\n},\nwideSydney = {\n    left: '86px', \n    top: '15px'\n},\nsmallSydney = {\n    left: '53px', \n    top: '28px'\n},\nwideNY = {\n    left: '260px', \n    top: '-2px'\n},\nsmallNY = {\n    left: '200px', \n    top: '11px'\n},\nwideLond = {\n    left: '431px', \n    top: '-18px'\n},\nsmallLond = {\n    left: '342px', \n    top: '-5px'\n},\nwideDub = {\n    left: '608px', \n    top: '-35px'\n},\nsmallDub = {\n    left: '490px', \n    top: '-22px'\n},\nwideTok = {\n    left: '784px', \n    top: '-51px'\n},\nsmallTok = {\n    left: '638px', \n    top: '-39px'\n}\n","import React from 'react'\n\nexport const SearchField = props => <input className=\"form-control form-rounded\" {...props} />\n\n","import React from 'react'\n\nexport function ListGroup({ data }) {\n    return (\n        <div>\n            <ul style={listStyle}>\n                <li style={itemStyle}>Country:<span/>{data.countryName}</li>\n                <li style={itemStyle}>Time Zone:<span/>{data.zoneName}</li>\n                <li style={itemStyle}>GMT Offset:<span/>{data.offset}</li>\n                <li style={itemStyle}>Bias (sec):<span/>{data.bias}</li>\n                <li style={itemStyle}>Daylight Savings:<span/>{data.dst}</li>\n            </ul>\n        </div>\n    )\n}\n\nconst itemStyle = {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '12px 20px',\n    display: 'flex'\n},\n\nlistStyle = {\n    paddingLeft: '0px',\n    flexDirection: 'column',\n    marginTop: '50px',\n    marginBottom: '-50px'\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { getLocalTime } from '../../utils/Helpers';\r\n\r\nexport function FourDigitClock({ offset }) {\r\n\r\n    const [ timeString, setTimeString ] = useState('12:00am');\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(localClock, 1000)  \r\n            return () => clearInterval(timer)\r\n    }, [offset])\r\n\r\n\r\n    const localClock = () => {\r\n\r\n        let { localHours, localMinutes } = getLocalTime(offset);\r\n\r\n            localMinutes = (localMinutes < 10 ? '0' : '') + localMinutes;\r\n\r\n        const timeOfDay = localHours < 12  ? 'am' : 'pm';\r\n            localHours = localHours > 12  ? localHours - 12 : localHours;\r\n            localHours = localHours == 0  ? 12 : localHours;\r\n\r\n        const localTimeString = `${localHours}:${localMinutes}${timeOfDay}`;\r\n        setTimeString(localTimeString);   \r\n    }  \r\n\r\n    return (\r\n        <div>\r\n            {timeString}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useState } from 'react'\nimport { FourDigitClock } from '../FourDigitClock'\nimport { Button } from '../Grid'\n\nexport function HistoryList({ data, loadCity, clearList }) {\n\n    const [ confirmed, isConfirmed ] = useState(false),\n\n    listCities = cities => {\n        return (\n            cities.map( (city, i) => \n                <li className='historic-city'\n                 key={i}\n                 style={itemStyle}\n                 onClick={loadCity.bind(this, i)}\n                 >\n                    {city.name}\n                    <FourDigitClock offset={city.offset} />\n                </li>\n            )\n        )\n    },\n\n    confirmListReset = () => {\n        if (data.length < 1) {\n            return\n        }\n\n        if (confirmed) {\n          return (\n            <div className={\"remove\"}>\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                style={clrBtn}\n                onClick={clearList.bind(this, () => {isConfirmed(!confirmed)})}\n              >\n                <i className=\"fas fa-exclamation\"> </i> Please Confirm\n              </Button>\n              <Button\n                className=\"btn minus\"\n                style={{ float: \"left\" }}\n                onClick={() => {\n                  isConfirmed(!confirmed);\n                }}\n              >\n                <i className=\"fas fa-ban\" /> Cancel\n              </Button>\n            </div>\n          );\n        } else {\n          return (\n            <div className={\"remove\"}>\n              <Button\n                className=\"btn minus\"\n                style={{ float: \"left\" }}\n                onClick={() => {\n                  isConfirmed(!confirmed);\n                }}\n              >\n                Clear History\n              </Button>\n            </div>\n          );\n        }\n      }\n\n\n    return (\n        <div>\n            <ul style={listStyle} >\n                <Fragment>\n                     {listCities(data)}\n                </Fragment>\n                     {confirmListReset()}\n            </ul>\n        </div>\n    )\n}\n\nconst itemStyle = {\n    alignItems: 'center',\n    border: 'none',\n    borderBottom: '1px solid rgb(0, 0, 0)', //used if browser doesn't support my attempt to use opacity below.  \n    borderBottom: '1px solid rgba(0, 0, 0, .3)',\n    justifyContent: 'space-between',\n    padding: '12px 20px',\n    display: 'flex'\n},\nlistStyle = {\n    paddingLeft: '0px',\n    flexDirection: 'column'\n}, \nclrBtn = { \n    float: 'right', \n    marginTop: '10px',\n    fontSize: '9px',\n    backGroundColor: '#d23430',\n    borderColor: '#c9302c',\n    color: 'white', \n    padding: '3px 10px',\n    fontWeight: '700'\n}\n","import React, { useState, useEffect } from 'react';\nimport { getLocalTime } from '../../utils/Helpers';\n\nexport function DigitalClock({ offset }) {\n\n    const [ timeString, setTimeString ] = useState('12:00:00 AM');\n    \n    useEffect(() => {\n        const timer = setInterval(localClock, 1000)  \n            return () => clearInterval(timer)\n    }, [offset])\n\n    const localClock = () => {\n        let { localHours, localMinutes, localSeconds } = getLocalTime(offset);\n\n            localMinutes = (localMinutes < 10 ? '0' : '') + localMinutes;\n            localSeconds = (localSeconds < 10 ? '0' : '') + localSeconds;\n\n        const timeOfDay = localHours < 12  ? 'AM' : 'PM';\n            localHours = localHours > 12  ? localHours - 12 : localHours;\n            localHours = localHours == 0  ? 12 : localHours;\n\n        const localTimeString = localHours + ':' + localMinutes + ':' + localSeconds + ' ' + timeOfDay;\n        setTimeString(localTimeString);   \n    }  \n\n\n    return (\n        <div>\n            <h2>{timeString}</h2>\n        </div>\n    )\n}\n","import React, { useState, useEffect  } from 'react';\nimport { getLocalTime } from '../../utils/Helpers';\n\nexport function AnalogClock({ offset }) {\n\n    const [ hands, setHands ] = useState({});\n\n    useEffect(() => {\n        const timer = setInterval(localClock, 1000)  \n            return () => clearInterval(timer)\n    }, [offset])\n\n    let { hourHand, minuteHand, secondHand } = hands,\n\n    localClock = () => {\n\n        let { localHours, localMinutes, localSeconds } = getLocalTime(offset),\n        \n        //Set the angle for each clock hand\n            hourHand = localHours * 30 + (localMinutes/2),  // 360/12 = 30 + 15degrees for 30min (example)\n            minuteHand = localMinutes * 6,  // 360/60 = 6\n            secondHand = localSeconds * 6; // 360/60 = 6\n\n         setHands({ hourHand, minuteHand, secondHand })\n    }\n\n    return (\n        <div style={finalMount} >\n            <ul style={finalAnalog}>\n                <li>\n                    <img src={require('../../assets/img/hour-hand-ds.png')} \n                    style={{...hrHand, transform: `rotate(${hourHand}deg)`}} \n                    />\n                </li>\n                <li>\n                    <img src={require('../../assets/img/minute-hand_ds.png')} \n                    style={{...minHand, transform: `rotate(${minuteHand}deg)`}} \n                    />\n                </li> \n                <li>\n                    <img src={require('../../assets/img/second-hand_ds.png')} \n                    style={{...secHand, transform: `rotate(${secondHand}deg)`}} \n                    />\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nconst mount = {\n    width: '250px',  \n    height: '250px',\n    textAlign: 'center',    \n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n},\nanalog = {\n    minWidth: '100%',\n    minHeight: '100%',\n    position: 'relative',\n    listStyle: 'none',\n    backgroundSize: '250px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundImage: `url(${require(\"../../assets/img/clock-ABS.png\")}`\n},\nhrHand = {\n    width: '25px',\n    top: '49px',\n    left: '112px ',\n    position: 'absolute',\n    transformOrigin: '50% 69%', \n    zIndex:'0'\n},\nminHand = {\n    width: '25px',\n    top: '37px',\n    left: '113px',\n    position: 'absolute',\n    transformOrigin: '50% 78%', \n    zIndex:'1'\n},\nsecHand = {\n    width: '25px',\n    top: '45px',\n    left: '113px',\n    position: 'absolute',\n    transformOrigin: '50% 63%',\n    zIndex:'2'\n},\nfinalMount = window.innerWidth > 1200 ?  mount : {...mount, width: '200px', height: '200px'} ,\nfinalAnalog = window.innerWidth > 1200 ?  analog : {...analog, backgroundSize: '200px'} ;","import React, { Fragment } from 'react';\nimport { getCountryGroup, stringTime } from '../../utils/Helpers';\nimport { Row, Col } from '../Grid';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport function DaylightSavings({ name, dstStart, dstEnd, code }) {\n    \n    let message;\n    const group = getCountryGroup(code),\n      startMods = {\n        highlighted: dstStart\n      },\n      endMods = {\n        highlighted: dstEnd\n      };\n    \n    if (group === 'none') {\n         message = <p>{<em>{name}</em>} has no preset daylight savings schedule.  Select the <b><em>\"Day of Week in Month\"</em></b> method. And configure the dates as follows:</p>\n    }\n    else {\n        message = <p>Daylight Savings for {<em>{name}</em>} is scheduled as follows... Choose <b><em>{group}</em></b> for this clock.</p>\n    }\n\n    if (dstEnd === 'none') {\n        return (\n            <Fragment>\n                <Row>\n                    <h2><i class=\"small material-icons\">timelapse</i> No Daylight Savings{'\\n'}</h2>\n                </Row>\n                <Row>\n                    <p>{`${name} Does NOT observe a daylight savings. Choose`} <b><em>\"None\"</em></b> for this clock.</p>\n                </Row>\n            </Fragment>\n        )\n    } else {\n        return (\n            <Fragment>\n                <Row>\n                    <h2><i class=\"small material-icons\">timelapse</i> Daylight Savings</h2>  \n                </Row>\n                <Row>\n                    {message}\n                </Row>\n                <Row >\n                    <Col size='md-6' classes='text-center' >\n                        <div style={window.innerWidth > 767 ? {float:'right'} : {}}>\n                            <style>{birthdayStyle}</style>\n                            <DayPicker \n                            month={new Date(dstStart.getFullYear(), dstStart.getMonth())} \n                            months={beginMonths} \n                            modifiers={startMods} \n                            />\n                            <div style={window.innerWidth > 767 ? {textAlign:'center'} : {}} >\n                               {dstStart.toDateString()} at {stringTime(dstStart)}\n                            </div>\n                        </div>\n                    </Col>\n                    <Col size='md-6'>\n                        \n                        <div>\n                            <style>{birthdayStyle}</style>\n                            <DayPicker \n                            month={new Date(dstEnd.getFullYear(), dstEnd.getMonth())}\n                            months={endMonths} \n                            modifiers={endMods} \n                            />\n                            <div style={window.innerWidth > 992 ? {marginLeft: '40px'} : {}}>\n                                {dstEnd.toDateString()} at {dstEnd.toLocaleTimeString()}\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Fragment>\n        )\n    }\n}\n\nconst birthdayStyle = `.DayPicker-Day--highlighted {\n    background-color: #fcaf17;\n    color: white;\n  }`,\n  beginMonths = [\n    'Begins January',\n    'Begins February',\n    'Begins March',\n    'Begins April',\n    'Begins May',\n    'Begins June',\n    'Begins July',\n    'Begins August',\n    'Begins September',\n    'Begins October',\n    'Begins November',\n    'Begins December',\n  ],\n  endMonths = [\n    'Ends January',\n    'Ends February',\n    'Ends March',\n    'Ends April',\n    'Ends May',\n    'Ends June',\n    'Ends July',\n    'Ends August',\n    'Ends September',\n    'Ends October',\n    'Ends November',\n    'Ends December',\n  ];","const googleAPIKey = process.env.REACT_APP_GOOGLE_APIKEY;\n\nexport default {\n    //typed city predictions\n    predictCities: async ({ name, token }) => {\n        const response = await fetch(`/api/predictions/${name}/${token}`) \n        return await response.json();            \n    }, \n\n    //get coordinates from google first to use their analysis of user input for accuracy, spell correcting, etc. timezoneDB works best with coordinates as well.\n    googleThis: async name => {\n        const response = await fetch(`/api/coordinates/${name}`)\n        return await response.json();     \n    },\n\n    getMapSrcUrl: () => `https://maps.googleapis.com/maps/api/js?callback=initMap&key=${googleAPIKey}`\n}","import React, { useEffect } from 'react';\nimport API from '../../utils/API';\nimport mapStyle from './mapStyle.json'\n\nexport function WorldMap({ coords }) {\n\n    useEffect(() => {\n        loadMap()\n    }, [coords])\n\n    const loadMap = () => {\n        const url = API.getMapSrcUrl()\n        window.initMap = initMap;\n        \n        loadScript(url)\n    },\n\n    initMap = () => {\n        const display = new window.google.maps.Map(document.getElementById('map'), {\n          zoom: 1.75,\n          center: coords,\n          disableDefaultUI: true,\n          styles: mapStyle\n        }),\n        marker = new window.google.maps.Marker({ position: coords, map: display });\n    },\n\n    loadScript = (url) => {\n        const index = window.document.getElementsByTagName('script')[0]\n\n        const script = window.document.createElement('script');\n            script.src = url\n            script.async = true\n            script.defer = true\n\n        index.parentNode.insertBefore(script, index);\n    }\n\n    return (\n        <main>\n            <div id='map' />\n        </main>\n    )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { uuid } from 'uuidv4';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { ClockMount } from '../../components/ClockMount';\nimport { SearchField } from '../../components/Search';\nimport { ListGroup } from '../../components/ListGroup';\nimport { HistoryList } from '../../components/HistoryList';\nimport { DigitalClock } from '../../components/DigitalClock';\nimport { AnalogClock } from '../../components/AnalogClock';\nimport { DaylightSavings } from '../../components/DaylightSavings';\nimport { WorldMap } from '../../components/WorldMap';\nimport { useFetch } from '../../utils/CustomHooks';\nimport API from '../../utils/API';\n\nexport default function Main() {\n\n  const [ city, setCity ] = useState({token: uuid()}),\n   [ coordinates, setCoordinates ] = useState({lat: 40.2067884, lng: -75.099807}),\n   [ names, setNames ] = useState({longName:'Sapling, Warminster, Pa', shortName:'Sapling'}),\n   [ predictions, setPredictions ] = useState({}),\n   [ history, setHistory ] = useState([]),\n\n   initialMount = useRef(true),\n\n   { zone, isLoading, hasError, errorMessage, updateUrl } = useFetch();\n  \n   useEffect(() => {\n     try {\n     const data = JSON.parse(localStorage.getItem('history'))\n     if (data) {\n      setHistory(data)\n     }\n    } catch (err) {console.log(err)}\n   }, [])\n\n   useEffect(() => { \n     try {\n      localStorage.setItem('history', JSON.stringify(history))\n     } catch (err) {console.log(err)}\n   }, [history])\n\n   useEffect(() => { \n      if (initialMount.current) {\n        initialMount.current = false;\n      }else {\n        updateLocalStorage()\n      }\n   }, [zone])\n\n  const onInputChange = async(e) => {\n    const { name, value } = e.target;\n    setCity({ ...city, [name]: value })\n\n    if (value.length > 0) {\n    try {\n      let suggestions;\n      const { predictions, status } = await API.predictCities({...city, name: value});\n      \n      suggestions = status === 'OK' ? predictions.map( x => x.description) : ['NO SUGGESTIONS']\n      setPredictions({ suggestions })\n    }\n    catch(err) {return}\n    }\n  },\n  \n  onFormSubmit = e => {\n    e.preventDefault();\n    e.target.reset();\n\n    getCoordinates(city.name)\n  },\n\n  updateLocalStorage = () => {\n    zone.coords = coordinates;\n    zone.names = names; \n\n    if (history.some( x => x.names.longName === zone.names.longName)) {\n      return\n    }\n    if (history.length > 16) {\n      history.shift();\n    }\n    setHistory([...history, zone ])\n  },\n\n  getCoordinates = async city => {\n    try{\n    const { results } = await API.googleThis(city),\n      [ place ] = results,\n      longName = place.formatted_address.replace(/[0-9]/g, ''),  //remove any numbering that's common here with google.\n      shortName = place.address_components[0].long_name,\n      lat = place.geometry.location.lat,\n      lng = place.geometry.location.lng,\n      zoneURL = `/api/timezone/${lat}/${lng}`;\n      \n    setNames({ longName, shortName })\n    setCoordinates({ lat, lng })\n    setCity({name: '', token: uuid()})\n    updateUrl(zoneURL)\n    } catch(err) {console.log(err)}\n  },\n\n  renderPredictions = () => {\n      const { name } = city,\n      { suggestions } = predictions;\n\n    if (!suggestions || suggestions.length < 1) return\n      if (name.length < 1){\n        setPredictions({...predictions, suggestions: []})\n        return\n      }\n    return (\n        <ul style={{listStyleType:\"none\", textAlign:\"left\", position:\"absolute\"}}>\n          {suggestions.map( (suggestion, i) => <li onClick={() => selectPredictions(suggestion)} key={i}>{suggestion}</li>)}\n        </ul>\n    )\n  }, \n\n  selectPredictions = str => {\n    const value = normalizeString(str);\n    setPredictions({ suggestions: [], text: '' })\n    getCoordinates(value)\n  },\n\n  //removes any accent/diacritic markings form autocompleted, text input.\n  normalizeString = str => str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"),\n\n  loadCityFromStorage = index => {\n    const { coords, names } = history[index],\n      zoneUrl = `/api/timezone/${coords.lat}/${coords.lng}`;\n\n    setNames(names)\n    setCoordinates(coords)\n    updateUrl(zoneUrl);\n  },\n\n  clearHistoryList = cb => {\n    localStorage.clear();\n    setHistory([]);\n    cb();\n  }\n\n    return (  \n        <Container >\n        <ClockMount />\n        <Row >\n          <Col size=\"md-3\" >\n            <form onSubmit={onFormSubmit} class=\"form-group mb-5\">\n              <div>\n                <span className=\"fas fa-search-location\" style={eyeGlass} />\n                  <SearchField \n                  placeholder={\"Search a City...\"}\n                  autocomplete=\"off\"\n                  name=\"name\"\n                  value={predictions.text}\n                  style={{textIndent: \"30px\", borderRadius: \"1rem\"}}\n                  onChange={onInputChange}\n                  />\n                  {renderPredictions()}\n              </div>\n                <div style={{height:\"50px\"}} />\n            </form>\n            <div style={historyStyle}>\n              <h5><i className=\"fas fa-history\"></i><em style={{float:'right'}}>History</em></h5>\n            </div>\n            <HistoryList \n            data={history.map( x => new Object({name: x.names.shortName, offset: x.rawOffset}))}\n            loadCity={loadCityFromStorage}\n            clearList={clearHistoryList}\n             />\n          </Col>\n          <Col size=\"md-9\" >\n                <div className=\"jumbotron\">\n                    <Row >\n                        <Col size='md-6'>\n                            <h4 style={{marginTop:'-40px'}}><center><em><b>{names.longName}</b></em></center></h4>\n                            {isLoading ? <div/> : <ListGroup data={zone} />}\n                        </Col>\n                        <Col size='md-4' classes=\"mt-n5 offset-md-2\">\n                          <Row>\n                          {isLoading ? <div/> : <AnalogClock offset={zone.rawOffset} />}\n                         </Row>\n                         <Row classes=\"justify-content-center mt-2\">\n                            {isLoading ? <div/> : <DigitalClock offset={zone.rawOffset} />}\n                        </Row>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"jumbotron\">\n                  <Row >\n                  <Col size='md-12'>\n                      <WorldMap \n                      coords={coordinates} \n                      />\n                  </Col>\n                  </Row>\n                  <hr className='mt-4' />\n                  {isLoading ? <div/> : \n                    <DaylightSavings \n                    name={names.shortName} \n                    dstStart={zone.dstStart} \n                    dstEnd={zone.dstEnd}\n                    code={zone.countryCode}\n                     />}\n                </div>\n          </Col>\n        </Row>\n      </Container>\n    )\n}\n\nconst eyeGlass = {\n  position: 'absolute',\n  top: '10px',\n  left: '25px',\n}, \n\nhistoryStyle = {\n  margin: '25px 0px 25px 0px',\n  borderBottom: '1px solid',\n}","import { useState, useEffect, useRef } from 'react';\nimport { FormatZone } from './Helpers'\n\n\n//I'm using this hook for more granular control & handling for my API call to timezoneDB.\nexport const useFetch = () => {\n    const [ zone, setZone ] = useState(null),\n    [ isLoading, setIsLoading ] = useState(true),\n    [ hasError, setError ] = useState(false),\n    [ errorMessage, setErrorMessage ] = useState(''),\n    [ url, updateUrl ] = useState('/api/timezone/40.2029196/-75.0847185'),\n\n     fetchZone = async () => {\n        try {\n          const response = await fetch(url),\n           result = await response.json();\n          if (result.status === 'OK') {\n            const saplingZone = FormatZone(result)\n            console.log(\"fetchZone -> saplingZone\", result)\n            setZone(saplingZone)\n          } else {\n            setError(true)\n            setErrorMessage('Nothing found. Check spelling. Or if the problem persist, the resource may be down. Try again later.')\n          }\n          setIsLoading(false)\n        } catch (err) {\n          setError(true)\n          setErrorMessage(err.message)\n          setIsLoading(false)\n        }\n    }\n    useEffect(() => {\n        fetchZone()\n    }, [url]);\n    \n    return { zone, isLoading, hasError, errorMessage, updateUrl }\n}\n\n//used to track previous states for comparison purposes. ex use:  previousItem = usePrevious(itemInput.property),\n export const usePrevious = value => {\n\n        const ref = useRef(false),\n         refValue = useRef()\n        console.log(ref.current, value)\n        useEffect(() => {\n          if(ref.current !== value) {\n          refValue.current = value;\n          ref.current = true;\n          }\n        }, [value]);\n        return ref.current;  \n}\n\n//force the re-rendering of state.\nexport const useForceUpdate = () => {\n    const [value, setValue] = useState(0); \n    return () => setValue(value => ++value); // update the state to force render\n}","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n            <div className={'flex-container about-flex about p-5'}>\r\n                <div className={\"jumbotron border-primary pt-4\"}>\r\n                <div className={\"card-header jumb-header text-center\"}>Sapling Zone Clock Utility</div>\r\n                <div className={\"card-body\"}>\r\n                    <h3 className={\"card-title\"}>About this application</h3>\r\n                    <hr/>\r\n                    <p className={\"card-text\"}>Sapling is an engineering firm in the Philadelphia suburbs that designs and manufactures clocks and synchronized, clock systems.  One of the items we offer are zone clocks.  And in Sapling production, these zone clocks should be pre-configured for whichever cities the customer chooses to use. The Zone Clock Setup Utility makes this process painless and straight forward by providing all the needed offset, bias and daylight saving information needed to program the Sapling clocks specifically.   Additionally, it'll provided other reginal information such as the city's location, displayed on a world map as well as its current, local time displayed on both an analog and digital clock.  With your browser's local memory storage, the user's search history is maintained to easily repeat common searches with a single click. The history list will also show the local times for these cities without the need to submit new searches.  This way the list can also be used to confirm all clocks are setup correctly when finishing up.  </p>\r\n                    <em><p><b>Note:</b> Raw GMT offsets may differ form what is displayed here, depending on the current status of daylight savings within a given city.</p></em>\r\n                </div>\r\n            </div>   \r\n         </div>\r\n        )\r\n    \r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar'\nimport Main from './pages/Main'\nimport About from './pages/About'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router >\n      <Navbar />\n      <Route exact path=\"/\"><Main /></Route>\n      <Route exact path=\"/about\" ><About /></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}