{"ast":null,"code":"import _regeneratorRuntime from\"/Users/page/Google Drive/Sandbox/zoneclock-utility/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/page/Google Drive/Sandbox/zoneclock-utility/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/page/Google Drive/Sandbox/zoneclock-utility/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/page/Google Drive/Sandbox/zoneclock-utility/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/page/Google Drive/Sandbox/zoneclock-utility/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{uuid}from'uuidv4';import logo from\"../../logo.svg\";import{Container,Row,Col}from'../../components/Grid';import ClockMount from'../../components/ClockMount';import{SearchField,Button}from'../../components/Search';import{useFetch}from'../../utils/CustomHooks';import API from'../../utils/API';export default function Main(){var _useState=useState({city:'Sapling-Inc',token:uuid()}),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),coordinates=_useState4[0],setCoordinates=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),properName=_useState6[0],setProperName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),predictions=_useState8[0],setPredictions=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),url=_useState10[0],setUrl=_useState10[1];var fetchAPI=useFetch(url),onInputChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _e$target,name,value,_yield$API$predictCit,_predictions,status,suggestions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_e$target=e.target,name=_e$target.name,value=_e$target.value;setCity(_objectSpread(_objectSpread({},city),{},_defineProperty({},name,value)));_context.prev=2;_context.next=5;return API.predictCities(_objectSpread(_objectSpread({},city),{},{city:value}));case 5:_yield$API$predictCit=_context.sent;_predictions=_yield$API$predictCit.predictions;status=_yield$API$predictCit.status;if(value.length>0&&status==='OK'){suggestions=_predictions.map(function(x){return x.description;});}setPredictions({suggestions:suggestions,text:value});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);return _context.abrupt(\"return\");case 15:case\"end\":return _context.stop();}}},_callee,null,[[2,12]]);}));return function onInputChange(_x){return _ref.apply(this,arguments);};}(),renderPredictions=function renderPredictions(){var suggestions=predictions.suggestions;if(!suggestions||suggestions.length<1)return;return/*#__PURE__*/React.createElement(\"ul\",{style:{listStyleType:\"none\",textAlign:\"left\"}},suggestions.map(function(suggestion,i){return/*#__PURE__*/React.createElement(\"li\",{onClick:function onClick(){return selectPredictions(suggestion);},key:i},suggestion);}));},selectPredictions=function selectPredictions(value){setPredictions({suggestions:[],text:value});};useEffect(function(){// const { data, isLoading, hasError, errorMessage } = fetchAPI\n// setUrl(`https://maps.googleapis.com/maps/api/geocode/json?address=paris,+france&key=${googAPIKey}`)\n},[]);var getZone=function getZone(){};return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(ClockMount,null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-3\"},/*#__PURE__*/React.createElement(\"form\",{class:\"form-group my-4\"},/*#__PURE__*/React.createElement(SearchField,{placeholder:\"Search a City...\",name:\"city\",value:predictions.text,autocomplete:\"off\",onChange:onInputChange}),renderPredictions(),/*#__PURE__*/React.createElement(SearchField,{placeholder:\"State or Country..\",name:\"country\",autocomplete:\"off\",onChange:onInputChange}),/*#__PURE__*/React.createElement(Button,null,\"Search\"))),/*#__PURE__*/React.createElement(Col,{size:\"md-9\"},/*#__PURE__*/React.createElement(\"div\",{className:\"jumbotron\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-6\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Metropolis City\")),/*#__PURE__*/React.createElement(Col,{size:\"md-6\",classes:\"mt-n5\"},/*#__PURE__*/React.createElement(\"img\",{style:analog,src:require('../../assets/img/clock-ABS.png'),alt:\"Analog Clock\"})))))),/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Edit \",/*#__PURE__*/React.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),/*#__PURE__*/React.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")));}var analog={width:'245px',float:'right'};","map":{"version":3,"sources":["/Users/page/Google Drive/Sandbox/zoneclock-utility/client/src/pages/Main/Main.js"],"names":["React","useState","useEffect","uuid","Container","Row","Col","ClockMount","SearchField","Button","useFetch","API","Main","city","token","setCity","coordinates","setCoordinates","properName","setProperName","predictions","setPredictions","url","setUrl","fetchAPI","onInputChange","e","target","name","value","predictCities","status","length","suggestions","map","x","description","text","renderPredictions","listStyleType","textAlign","suggestion","i","selectPredictions","getZone","analog","require","logo","width","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { uuid } from 'uuidv4';\nimport logo from '../../logo.svg';\nimport { Container, Row, Col } from '../../components/Grid';\nimport ClockMount from '../../components/ClockMount';\nimport { SearchField, Button } from '../../components/Search';\nimport { useFetch } from '../../utils/CustomHooks';\nimport API from '../../utils/API'\n\nexport default function Main() {\n\n  const [city, setCity] = useState({city: 'Sapling-Inc', token: uuid()});\n  const [coordinates, setCoordinates] = useState({})\n  const [properName, setProperName] = useState('')\n  const [predictions, setPredictions] = useState([])\n  const [url, setUrl] = useState('')\n\n  const fetchAPI = useFetch(url),\n\n  onInputChange = async(e) => {\n    const { name, value } = e.target;\n    setCity({ ...city, [name]: value })\n\n    try {\n    const { predictions, status } = await API.predictCities({...city, city: value});\n    let suggestions;\n    if (value.length > 0 && status === 'OK') {\n        suggestions = predictions.map( x => x.description);\n      }\n      setPredictions({ suggestions, text: value })\n  } catch(err) {return}\n  \n    // lat = results[0].geometry.location.lat,\n    // lng = results[0].geometry.location.lng,\n    // place = results[0].formatted_address;\n\n    // setCoordinates({ lat, lng })\n    // setProperName(place)\n},\n\n  renderPredictions = () => {\n    const { suggestions } = predictions;\n\n    if (!suggestions || suggestions.length < 1) return\n    \n    return (\n        <ul style={{listStyleType:\"none\", textAlign:\"left\"}}>\n          {suggestions.map( (suggestion, i) => <li onClick={() => selectPredictions(suggestion)} key={i}>{suggestion}</li>)}\n        </ul>\n    )\n  }, \n\n  selectPredictions = value => {\n    setPredictions({ suggestions: [], text: value })\n  }\n\n\n  useEffect(() => {\n    // const { data, isLoading, hasError, errorMessage } = fetchAPI\n   \n    \n    // setUrl(`https://maps.googleapis.com/maps/api/geocode/json?address=paris,+france&key=${googAPIKey}`)\n  }, [])\n  \n  const getZone= () => {\n    \n  }\n\n    return (  \n        <Container >\n        <ClockMount />\n        <Row >\n          <Col size=\"md-3\" >\n            <form class=\"form-group my-4\">\n                <SearchField \n                placeholder=\"Search a City...\"\n                name=\"city\"\n                value={predictions.text}\n                autocomplete=\"off\"\n                onChange={onInputChange}\n                />\n                {renderPredictions()}\n                <SearchField \n                placeholder=\"State or Country..\" \n                name=\"country\"\n                autocomplete=\"off\"\n                onChange={onInputChange}\n                />\n                <Button>Search</Button>\n            </form>\n          </Col>\n          <Col size=\"md-9\" >\n                <div className=\"jumbotron\">\n                    <Row >\n                        <Col size='md-6'>\n                            <h4>Metropolis City</h4>\n                        </Col>\n                        <Col size='md-6' classes=\"mt-n5\">\n                            <img style={analog} src={require('../../assets/img/clock-ABS.png')} alt=\"Analog Clock\" />\n                        </Col>\n                    </Row>\n\n                </div>\n          </Col>\n        </Row>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n          </Container>\n    )\n}\n\nconst analog = {\n    width: '245px',\n    float: 'right'\n}"]},"metadata":{},"sourceType":"module"}