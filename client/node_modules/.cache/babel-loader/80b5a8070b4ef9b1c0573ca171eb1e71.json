{"ast":null,"code":"var _jsxFileName = \"/Users/page/Google Drive/Sandbox/zoneclock-utility/src/pages/Main/Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { uuid } from 'uuidv4';\nimport logo from \"../../logo.svg\";\nimport { Container, Row, Col } from '../../components/Grid';\nimport ClockMount from '../../components/ClockMount';\nimport { SearchField, Button } from '../../components/Search';\nimport { useFetch } from '../../utils/CustomHooks';\nimport API from '../../utils/API';\nexport default function Main() {\n  const [city, setCity] = useState({\n    city: 'Sapling-Inc',\n    token: uuid()\n  });\n  const [coordinates, setCoordinates] = useState({});\n  const [properName, setProperName] = useState('');\n  const [url, setUrl] = useState('');\n  const googAPIKey = process.env.REACT_APP_GOOGLE_APIKEY;\n\n  const fetchAPI = useFetch(url),\n        onInputChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCity({ ...city,\n      [name]: value\n    }); // const { predictions, status } = await API.predictCities(city);\n    // console.log(\"onInputChange -> predictions\", predictions)\n    // lat = results[0].geometry.location.lat,\n    // lng = results[0].geometry.location.lng,\n    // place = results[0].formatted_address;\n    // setCoordinates({ lat, lng })\n    // setProperName(place)\n  };\n\n  useEffect(() => {\n    const {\n      data,\n      isLoading,\n      hasError,\n      errorMessage\n    } = fetchAPI;\n    console.log(\"fetchSomething -> data\", data, isLoading, hasError, errorMessage);\n    setUrl(`https://maps.googleapis.com/maps/api/geocode/json?address=paris,+france&key=${googAPIKey}`);\n  }, []);\n\n  const getZone = () => {};\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClockMount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"form-group my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    placeholder: \"Search a City...\",\n    name: \"city\",\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SearchField, {\n    placeholder: \"State or Country..\",\n    name: \"country\",\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Metropolis City\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    classes: \"mt-n5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: analog,\n    src: require('../../assets/img/clock-ABS.png'),\n    alt: \"Analog Clock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })))))), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Learn React\")));\n}\nconst analog = {\n  width: '245px',\n  float: 'right'\n};","map":{"version":3,"sources":["/Users/page/Google Drive/Sandbox/zoneclock-utility/src/pages/Main/Main.js"],"names":["React","useState","useEffect","uuid","Container","Row","Col","ClockMount","SearchField","Button","useFetch","API","Main","city","setCity","token","coordinates","setCoordinates","properName","setProperName","url","setUrl","googAPIKey","process","env","REACT_APP_GOOGLE_APIKEY","fetchAPI","onInputChange","e","name","value","target","data","isLoading","hasError","errorMessage","console","log","getZone","analog","require","logo","width","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { uuid } from 'uuidv4';\nimport logo from '../../logo.svg';\nimport { Container, Row, Col } from '../../components/Grid';\nimport ClockMount from '../../components/ClockMount';\nimport { SearchField, Button } from '../../components/Search';\nimport { useFetch } from '../../utils/CustomHooks';\nimport API from '../../utils/API'\n\nexport default function Main() {\n\n  const [city, setCity] = useState({city: 'Sapling-Inc', token: uuid()});\n  const [coordinates, setCoordinates] = useState({})\n  const [properName, setProperName] = useState('')\n  const [url, setUrl] = useState('')\n  const googAPIKey = process.env.REACT_APP_GOOGLE_APIKEY;\n\n  const fetchAPI = useFetch(url),\n\n  onInputChange = async(e) => {\n    const { name, value } = e.target;\n    setCity({ ...city, [name]: value })\n\n    // const { predictions, status } = await API.predictCities(city);\n    // console.log(\"onInputChange -> predictions\", predictions)\n\n    // lat = results[0].geometry.location.lat,\n    // lng = results[0].geometry.location.lng,\n    // place = results[0].formatted_address;\n\n    // setCoordinates({ lat, lng })\n    // setProperName(place)\n}\n\n  useEffect(() => {\n    const { data, isLoading, hasError, errorMessage } = fetchAPI\n   \n    console.log(\"fetchSomething -> data\", data, isLoading, hasError, \n    errorMessage)\n    setUrl(`https://maps.googleapis.com/maps/api/geocode/json?address=paris,+france&key=${googAPIKey}`)\n  }, [])\n  \n  const getZone= () => {\n    \n  }\n\n    return (  \n        <Container >\n        <ClockMount />\n        <Row >\n          <Col size=\"md-3\" >\n            <form class=\"form-group my-4\">\n                <SearchField \n                placeholder=\"Search a City...\"\n                name=\"city\"\n                onChange={onInputChange}\n                />\n                <SearchField \n                placeholder=\"State or Country..\" \n                name=\"country\"\n                onChange={onInputChange}\n                />\n                <Button>Search</Button>\n            </form>\n          </Col>\n          <Col size=\"md-9\" >\n                <div className=\"jumbotron\">\n                    <Row >\n                        <Col size='md-6'>\n                            <h4>Metropolis City</h4>\n                        </Col>\n                        <Col size='md-6' classes=\"mt-n5\">\n                            <img style={analog} src={require('../../assets/img/clock-ABS.png')} alt=\"Analog Clock\" />\n                        </Col>\n                    </Row>\n\n                </div>\n          </Col>\n        </Row>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n          </Container>\n    )\n}\n\nconst analog = {\n    width: '245px',\n    float: 'right'\n}"]},"metadata":{},"sourceType":"module"}